<div class='card' contenteditable>
<button onclock=window.open()>METAMASK WALLET</button>
<br>
<button onclock=window.open()>TRUST WALLET</button>
<br>
<button onclock=window.open()>BINANCE WALLET</button>
<br>
<button onclock=window.open()>FIXER WALLET</button>
</div>
<style>

// the rainbow palette
$c: #f94144, #f3722c, #f8961e, #f9844a, #f9c74f, #90be6d, #43aa8b, #4d908e, #277da1, #577590;
$b: 6px; // border-width
$r: 2em; // blur radius

@property --α { /* must register --α to animate it */
	syntax: '<angle>';
	initial-value: 0deg;
	/* used only on pseudo, nowhere to be inherited, 
	 * better perf if set false, see 
	 * https://www.bram.us/2024/10/03/benchmarking-the-performance-of-css-property/ */
	inherits: false
}

.card {
	/* needed for absolutely positioned pseudo */
	position: relative;
	/* set dimensions IF even necessary to set, 
	 * not given by content or parent layout */
	max-width: 15em;
	aspect-ratio: 3/ 2;
	/* transparent, just to reserve the space */
	border: solid $b #0000;
	padding: .75em; /* space between border & text */
	border-radius: 1em; /* round corners */
	/* (semi)transparent background, can be 
	 * a gradient with (semi)transparent stops */
	background: #edabab21;
		
	&::before, &::after {
		/* full opaque coverage of its box */
		--full: conic-gradient(red 0 0);
		/* grid doesn't work for stacking 
		 * when a stacked item is text node */
		position: absolute;
		/* equal to the border-width with minus */
		inset: -1*$b;
		/* inherit parent box model & rounded corners */
		border: inherit;
		border-radius: inherit;
		/* reserve no-clip space for glow */
		box-shadow: 0 0 3*$r rgba(0 0 0/ .001);
		background: 
			conic-gradient(from var(--α), 
					#{$c}, #{nth($c, 1)}) border-box;
		/* make everything inside padding-box transparent
		 * by subtracting padding-box from no-clip box */
		mask: var(--full) no-clip subtract, 
			var(--full) padding-box;
		/* don't get in the way of selecting text */
		pointer-events: none;
		/* animate gradient start angle */
		animation: α 4s linear infinite;
		content: ''
	}
	
	/* turn one pseudo layer into glow */
	&::after { filter: blur($r) }
}

@keyframes α { to { --α: 1turn } }

/* layout & prettifying */
html, body, div {
	box-sizing: border-box;
	display: grid;
	place-items: center
}

html { min-height: 100% }

body {
	background: 
		url() 
			5%/ cover #212121;
	background-blend-mode: multiply;
	color: #dedede;
	font: 300 clamp(.875em, 5vw, 2.5em) saira, sans-serif;
	text-align: center;
	text-wrap: balance
}
</style>
